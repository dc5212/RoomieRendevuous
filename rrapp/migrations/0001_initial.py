# Generated by Django 4.2 on 2023-11-01 20:39

from django.conf import settings
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import psycopg2.extras


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=30, unique=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("bio", models.TextField(null=True)),
                ("profile_picture_url", models.CharField(max_length=100)),
                ("smokes", models.BooleanField(default=False)),
                ("has_pets", models.BooleanField(default=False)),
                ("phone_number", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Amenities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("washer", models.BooleanField(default=True)),
                ("dryer", models.BooleanField(default=True)),
                ("dishwasher", models.BooleanField(default=True)),
                ("microwave", models.BooleanField(default=True)),
                ("baking_oven", models.BooleanField(default=True)),
                ("parking", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("status", models.CharField(max_length=100)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(default="")),
                ("monthly_rent", models.IntegerField(default=1000)),
                (
                    "date_available_from",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "date_available_to",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("independent_house", "Independent house"),
                            ("apartment", "Apartment"),
                        ],
                        default="apartment",
                        max_length=20,
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[("private", "Private"), ("shared", "Shared")],
                        default="private",
                        max_length=20,
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        default="", max_length=1024, verbose_name="Address line 1"
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        default="", max_length=1024, verbose_name="Address line 2"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        default="11201", max_length=12, verbose_name="ZIP / Postal code"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        default="New York", max_length=1024, verbose_name="City"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="US", max_length=3, verbose_name="Country"
                    ),
                ),
                ("washer", models.BooleanField(default=True)),
                ("dryer", models.BooleanField(default=True)),
                ("dishwasher", models.BooleanField(default=True)),
                ("microwave", models.BooleanField(default=True)),
                ("baking_oven", models.BooleanField(default=True)),
                ("parking", models.BooleanField(default=False)),
                ("number_of_bedrooms", models.IntegerField(default=1)),
                ("number_of_bathrooms", models.IntegerField(default=1)),
                ("furnished", models.BooleanField(default=True)),
                ("utilities_included", models.BooleanField(default=True)),
                (
                    "age_range",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True,
                        default=psycopg2.extras.NumericRange(18, 60, "[)"),
                        validators=[
                            django.contrib.postgres.validators.RangeMinValueValidator(
                                18
                            ),
                            django.contrib.postgres.validators.RangeMaxValueValidator(
                                100
                            ),
                        ],
                    ),
                ),
                ("smoking_allowed", models.BooleanField(default=False)),
                (
                    "pets_allowed",
                    models.CharField(
                        choices=[
                            ("cats", "Cats"),
                            ("dogs", "Dogs"),
                            ("none", "None"),
                            ("all", "All"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "food_groups_allowed",
                    models.CharField(
                        choices=[
                            ("vegan", "Vegan"),
                            ("vegetarian", "Vegetarian"),
                            ("non_vegetarian", "Non Vegetarian"),
                            ("all", "All"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "age_range",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True,
                        default=psycopg2.extras.NumericRange(1, 101, "[)"),
                        validators=[
                            django.contrib.postgres.validators.RangeMinValueValidator(
                                1
                            ),
                            django.contrib.postgres.validators.RangeMaxValueValidator(
                                100
                            ),
                        ],
                    ),
                ),
                ("smoking_allowed", models.BooleanField()),
                (
                    "pets_allowed",
                    models.CharField(
                        choices=[
                            ("cats", "Cats"),
                            ("dogs", "Dogs"),
                            ("none", "None"),
                            ("all", "All"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "food_groups_allowed",
                    models.CharField(
                        choices=[
                            ("vegan", "Vegan"),
                            ("vegetarian", "Vegetarian"),
                            ("non_vegetarian", "Non Vegetarian"),
                            ("all", "All"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Rentee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rentee",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SavedListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rentee_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_listing",
                        to="rrapp.rentee",
                    ),
                ),
                (
                    "saved_listings",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rentee",
                        to="rrapp.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Renter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="renter",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
