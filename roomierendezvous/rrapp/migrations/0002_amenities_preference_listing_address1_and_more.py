# Generated by Django 4.2 on 2023-10-10 22:34

import datetime
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.validators
from django.db import migrations, models
import psycopg2.extras


class Migration(migrations.Migration):
    dependencies = [
        ('rrapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenities',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('washer', models.BooleanField(default=True)),
                ('dryer', models.BooleanField(default=True)),
                ('dishwasher', models.BooleanField(default=True)),
                ('microwave', models.BooleanField(default=True)),
                ('baking_oven', models.BooleanField(default=True)),
                ('parking', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'age_range',
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True,
                        default=psycopg2.extras.NumericRange(1, 101, '[)'),
                        validators=[
                            django.contrib.postgres.validators.RangeMinValueValidator(
                                1
                            ),
                            django.contrib.postgres.validators.RangeMaxValueValidator(
                                100
                            ),
                        ],
                    ),
                ),
                ('smoking_allowed', models.BooleanField()),
                (
                    'pets_allowed',
                    models.CharField(
                        choices=[
                            ('cats', 'Cats'),
                            ('dogs', 'Dogs'),
                            ('none', 'None'),
                            ('all', 'All'),
                        ],
                        default='none',
                        max_length=20,
                    ),
                ),
                (
                    'food_groups_allowed',
                    models.CharField(
                        choices=[
                            ('vegan', 'Vegan'),
                            ('vegetarian', 'Vegetarian'),
                            ('non_vegetarian', 'Non Vegetarian'),
                            ('all', 'All'),
                        ],
                        default='all',
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='listing',
            name='address1',
            field=models.CharField(
                default='', max_length=1024, verbose_name='Address line 1'
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='address2',
            field=models.CharField(
                default='', max_length=1024, verbose_name='Address line 2'
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='age_range',
            field=django.contrib.postgres.fields.ranges.IntegerRangeField(
                blank=True,
                default=psycopg2.extras.NumericRange(1, 101, '[)'),
                validators=[
                    django.contrib.postgres.validators.RangeMinValueValidator(1),
                    django.contrib.postgres.validators.RangeMaxValueValidator(100),
                ],
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='baking_oven',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='city',
            field=models.CharField(
                default='New York', max_length=1024, verbose_name='City'
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='country',
            field=models.CharField(default='USA', max_length=3, verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='listing',
            name='dishwasher',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='dryer',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='food_groups_allowed',
            field=models.CharField(
                choices=[
                    ('vegan', 'Vegan'),
                    ('vegetarian', 'Vegetarian'),
                    ('non_vegetarian', 'Non Vegetarian'),
                    ('all', 'All'),
                ],
                default='all',
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='microwave',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='parking',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='listing',
            name='pets_allowed',
            field=models.CharField(
                choices=[
                    ('cats', 'Cats'),
                    ('dogs', 'Dogs'),
                    ('none', 'None'),
                    ('all', 'All'),
                ],
                default='none',
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name='listing',
            name='smoking_allowed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='listing',
            name='washer',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='listing',
            name='zip_code',
            field=models.CharField(
                default='11201', max_length=12, verbose_name='ZIP / Postal code'
            ),
        ),
        migrations.AlterField(
            model_name='listing',
            name='created_at',
            field=models.DateTimeField(
                default=datetime.datetime(
                    2023, 10, 10, 22, 34, 44, 305024, tzinfo=datetime.timezone.utc
                )
            ),
        ),
        migrations.AlterField(
            model_name='listing',
            name='date_available_from',
            field=models.DateField(default=datetime.date(2023, 10, 10)),
        ),
        migrations.AlterField(
            model_name='listing',
            name='date_available_to',
            field=models.DateField(default=datetime.date(2023, 11, 9)),
        ),
    ]
